<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Statistics</title>
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link rel="icon" href="/static/gg.png">
    <style>
        body{
            margin:  0;
            padding: 0;
            font-family:     sans-serif;
            background-color: lightblue;
            background-size:      cover;
            background-position: center;
            background-image: url('/static/son.jpg');
        }
        .sign-up-form
        {
            width: 60%;
            height: 100%;
            box-shadow: 0 0 3px 0 rgba(0,0, 0, 0.3);
            background: #fff;
            padding: 10px;
            text-align: center;
            border-radius: 15px;
            margin: 10% auto 0;
        }
        .sign-up-form h1{
            color: #1c8adb;
            margin-bottom: 30px;
        }
        .form-group{
            border-radius: 20px;
            padding:       10px;
            margin:      10px 0;
            width: 90%;
            border: 1px solid #999;
            outline: none;
        }
        #cat{
            margin-left: 10px;
        }
        button{
            color: #fff;
            width: 50%;
            padding: 10px;
            border-radius: 20px;
            font-size: 15px;
            margin: 10px 0;
            border: none;
            outline: none;
            cursor: pointer;
        }
        hr{
            margin-top: 20px;
            width: 80%;
        }
        .or{
            background: #fff;
            width: 30px;
            margin: -19px auto;
        }
        .signup-btn{
            background-color: #1c8adb;

        }
        footer {
            height: 50px;
            text-align: center;
            padding: 3px;
            background-color: #222222;
            color: white;
            position: absolute;
        }
    </style>
    <script
            src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js">
    </script>

</head>

<body>
<%-include('navbar')%>
<div class="container">
<ul class="nav nav-tabs mb-3" id="ex-with-icons" role="tablist">
    <li class="nav-item" role="presentation">
        <a class="nav-link active" id="ex-with-icons-tab-1" data-mdb-toggle="tab" href="#ex-with-icons-tabs-1" role="tab"
           aria-controls="ex-with-icons-tabs-1" aria-selected="true"><i class="fas fa-chart-pie fa-fw me-2"></i>Week</a>
    </li>
    <li class="nav-item" role="presentation">
        <a class="nav-link" id="ex-with-icons-tab-2" data-mdb-toggle="tab" href="#ex-with-icons-tabs-2" role="tab"
           aria-controls="ex-with-icons-tabs-2" aria-selected="false"><i class="fas fa-chart-line fa-fw me-2"></i>Month</a>
    </li>
    <li class="nav-item" role="presentation">
        <a class="nav-link" id="ex-with-icons-tab-3" data-mdb-toggle="tab" href="#ex-with-icons-tabs-3" role="tab"
           aria-controls="ex-with-icons-tabs-3" aria-selected="false"><i class="fas fa-cogs fa-fw me-2"></i>Year</a>
    </li>
</ul>
<!-- Tabs navs -->

<!-- Tabs content -->
    <div class="container" style="float: top;max-width: 80%">
        <div class="tab-content" id="ex-with-icons-content">
            <div class="tab-pane fade show active" id="ex-with-icons-tabs-1" role="tabpanel" aria-labelledby="ex-with-icons-tab-1">
                <canvas id="week"></canvas>
            </div>
            <div class="tab-pane fade" id="ex-with-icons-tabs-2" role="tabpanel" aria-labelledby="ex-with-icons-tab-2">

                <div class="container my-5" style="max-width: 200%">
                    <div class="row">
                        <div style="width: 100%" class="col-md-6 mx-auto">
                            <div class="card shadow-sm">
                                <div class="card-header bg-primary text-white py-3">
                                    <h4 class="card-title mb-0">May 2023</h4>
                                </div>
                                <div class="card-body p-0">
                                    <div class="table-responsive">
                                        <table class="table align-middle mb-0 bg-white">
                                            <thead>
                                            <tr class="bg-light">
                                                <th scope="col">Mon</th>
                                                <th scope="col">Tue</th>
                                                <th scope="col">Wed</th>
                                                <th scope="col">Thu</th>
                                                <th scope="col">Fri</th>
                                                <th scope="col">Sat</th>
                                                <th scope="col">Sun</th>
                                            </tr>
                                            </thead>
                                            <tbody id="calendar">

                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="tab-pane fade" id="ex-with-icons-tabs-3" role="tabpanel" aria-labelledby="ex-with-icons-tab-3">
            </div>
        </div>
    </div>
</div>
<script>
    function argMax(array){
        return array.map((x, i) => [x, i]).reduce((r, a) => (a[0] > r[0] ? a : r))[1];
    }
    // Функция для создания таблицы-календаря
    function createCalendar(year, month, data) {
        const classes = ["Sadness", "Joy", "Love", "Anger", "Fear", "Surprise"]
        // Получаем элемент, в котором будет располагаться таблица-календарь
        var calendarContainer = document.getElementById("calendar");

        // Создаем заголовок таблицы с названиями дней недели
        var headerRow = document.createElement("tr");
        var daysOfWeek = ["Вс", "Пн", "Вт", "Ср", "Чт", "Пт", "Сб"];
        for (var i = 0; i < daysOfWeek.length; i++) {
            var headerCell = document.createElement("th");
            headerCell.textContent = daysOfWeek[i];
            headerRow.appendChild(headerCell);
        }

        // Создаем объект даты для первого дня месяца
        var firstDay = new Date(year, month, 1);

        // Определяем день недели первого дня месяца (0 - воскресенье, 1 - понедельник, и т.д.)
        var startDayOfWeek = firstDay.getDay();
        if (startDayOfWeek === 0) {
            startDayOfWeek = 7; // Коррекция для правильного отображения
        }

        // Определяем последний день месяца
        var lastDay = new Date(year, month + 1, 0);
        var totalDays = lastDay.getDate();

        // Создаем строки таблицы с днями месяца
        var currentDate = new Date(firstDay);
        currentDate.setDate(currentDate.getDate() - startDayOfWeek + 1); // Корректируем дату, чтобы учесть первый день недели

        while (currentDate <= lastDay) {
            // Создаем новую строку
            var row = document.createElement("tr");
            let countDay = 0
            // Добавляем ячейки с днями недели
            for (var j = 0; j < 7; j++) {
                var cell = document.createElement("td");
                var value = document.createElement("div");
                // Проверяем, если день находится в пределах текущего месяца, то отображаем его номер
                if (
                    currentDate.getMonth() === month &&
                    currentDate.getDate() <= totalDays
                ) {
                    let day = currentDate.getDate();
                    // Ищем данные для текущей даты в полученных данных из MongoDB
                    var dayData = data.find((item) => item.date.getDate() === day);
                    if (dayData) {
                        cell.textContent = dayData.event; // Отображаем событие
                    } else {
                        cell.textContent = day;
                        value.textContent = classes[argMax(data[countDay].emotions)]
                    }
                }

                // Добавляем ячейку в текущую строку
                cell.appendChild(value)
                row.appendChild(cell);
                // Переходим к следующему дню
                currentDate.setDate(currentDate.getDate() + 1);
            }

            // Добавляем строку в таблицу
            calendarContainer.appendChild(row);
            countDay += 1;
        }

        // Добавляем заголовок таблицы
        calendarContainer.appendChild(headerRow);
    }

    // Получаем данные из MongoDB и создаем календарь
    function fetchData(){
        fetch('/data')
            .then((response) => response.json())
            .then((data) => {
                var currentDate = new Date();
                var currentYear = currentDate.getFullYear();
                var currentMonth = currentDate.getMonth();

                createCalendar(currentYear, currentMonth, data);
            })
            .catch((error) => {
                console.error(error);
            });
    }
    fetchData()


    function getMax(array){
        const total = []
        array.forEach((i,index)=>{
            total.push(argMax(i.emotions))
        })
        return total
    }

    function getChart(id,array,labels){
        const lab = ["Sadness", "Joy", "Love", "Anger", "Fear", "Surprise"]
    var ctxB = document.getElementById(id).getContext('2d');
    var myBarChart = new Chart(ctxB, {
        type: 'bar',
        data: {
            labels: labels,
            datasets: [{
                label: 'Emotions',
                data: array,
                backgroundColor: [
                    'rgba(53, 106, 193, 0.2)',
                    'rgba(53, 106, 193, 0.2)',
                    'rgba(53, 106, 193, 0.2)',
                    'rgba(53, 106, 193, 0.2)',
                    'rgba(53, 106, 193, 0.2)',
                    'rgba(53, 106, 193, 0.2)'
                ],
                borderColor: [
                    'rgba(53,106,193,1)',
                    'rgba(53,106,193,1)',
                    'rgba(53,106,193,1)',
                    'rgba(53,106,193,1)',
                    'rgba(53,106,193,1)',
                    'rgba(53,106,193,1)'
                ],
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true,
                        callback: function (value, index, values) {
                            // заменяем числовые значения оси x на соответствующие текстовые метки
                            return lab[value];
                        },
                        max:6,
                        min:-1
                    }
                }]
            }
        }
    });
    }

    const week = [<%=week%>]
    const weekDate = [<%=weekDate%>]
    const month = [<%=month%>]
    const monthDate = [<%=monthDate%>]
    const year = [<%=year%>]
    const yearDate = [<%=yearDate%>]
    console.log([<%=week%>])
    getChart("week" ,  getMax(week), weekDate)
    getChart("month", getMax(month), monthDate)
    getChart("year" , getMax(year), yearDate)

</script>
</body>
</html>